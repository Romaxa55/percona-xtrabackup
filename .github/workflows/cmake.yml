name: Build on Rocky Linux 8.7

on:
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: "arm64"
            arch: "aarch64"
          - platform: "amd64"
            arch: "x86_64"

    steps:
#    - uses: actions/checkout@v3
#      with:
#        submodules: recursive
#
#    - name: Set up Docker Buildx
#      uses: docker/setup-buildx-action@v2.5.0
#
#    # Install QEMU for multi-architecture support
#    - name: Set up QEMU
#      uses: docker/setup-qemu-action@v1.2.0
#      with:
#        platforms: ${{ matrix.platform }}
#
#    - name: Create directories
#      run: |
#        mkdir -p ${{ github.workspace }}/build
#
#    - name: Run the build process with Docker
#      uses: addnab/docker-run-action@v3
#      with:
#        image: rockylinux:8.7
#        options: --platform ${{ matrix.platform }} -v ${{ github.workspace }}/:/app -w /app
#        run: |
#          set -x
#          uname -a
#          dnf update -y
#          #dnf --enablerepo=devel install -y cmake openssl-devel libaio libaio-devel automake autoconf \
#          # bison libtool ncurses-devel libgcrypt-devel libev-devel \
#          # libcurl-devel zlib-devel zstd vim-common \
#          # gcc-toolset-12-gcc gcc-toolset-12-gcc-c++ \
#          # gcc-toolset-12-binutils gcc-toolset-12-annobin-annocheck \
#          # gcc-toolset-12-annobin-plugin-gcc numactl-devel libudev-devel cyrus-sasl-devel \
#          # openldap-devel binutils lld ca-certificates procps-ng-devel
#          cd build
#          touch artifact.txt
#          tar -czvf artifact.tar.gz *.txt
#          #cmake .. -DDOWNLOAD_BOOST=1 -DWITH_BOOST=/boost -DWITH_NUMA=1 -DCMAKE_INSTALL_PREFIX=/percona
#          #make -j $(nproc) && cpack

#    - name: Create Release
#      continue-on-error: true
#      uses: actions/create-release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
#      with:
#        tag_name: ${{ github.ref }}
#        release_name: Release ${{ github.ref }}
#        draft: false
#        prerelease: false

    - name: Prepare file list
      id: prepare
      run: echo "files=$(ls ${GITHUB_WORKSPACE}/build/*.tar.gz | xargs)" >> $GITHUB_OUTPUT

    - name: Create file list
      run: touch artifact.txt && tar -czvf artifact.tar.gz *.txt

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ${{ steps.prepare.outputs.files }}
        tag_name: ${{ github.ref }}
        name: percona-xtrabackup-linux-${{ matrix.arch }}.tar.gz


