name: Build on Rocky Linux 8.7

on:
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/arm64, linux/amd64]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2.5.0

    # Install QEMU for multi-architecture support
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1.2.0
      with:
        platforms: ${{ matrix.platform }}

    - name: Create directories
      run: |
        mkdir -p ${{ github.workspace }}/build

    - name: Run the build process with Docker
      uses: addnab/docker-run-action@v3
      with:
        image: rockylinux:8.7
        options: --platform ${{ matrix.platform }} -v ${{ github.workspace }}/:/app -w /app
        run: |
          set -x
          uname -a
          dnf update -y
          dnf install -y cmake openssl-devel libaio libaio-devel automake autoconf \
           bison libtool ncurses-devel libgcrypt-devel libev-devel \
           libcurl-devel zlib-devel zstd vim-common \
           gcc-toolset-12-gcc gcc-toolset-12-gcc-c++ \
           gcc-toolset-12-binutils gcc-toolset-12-annobin-annocheck \
           gcc-toolset-12-annobin-plugin-gcc numactl-devel libudev-devel cyrus-sasl-devel \
           openldap-devel binutils lld
          cd build
          cmake .. -DDOWNLOAD_BOOST=1 -DWITH_BOOST=/boost -DWITH_NUMA=1 -DCMAKE_INSTALL_PREFIX=/percona
          make -j $(nproc) && cpack
